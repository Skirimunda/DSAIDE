% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_transmissionmodes.R
\name{simulate_transmissionmodes}
\alias{simulate_transmissionmodes}
\title{Simulation of a compartmental infectious disease transmission model illustrating different types of transmission}
\usage{
simulate_transmissionmodes(PopSize = 1e+06, I0 = 1, R0 = 0, tmax = 5,
  gamma = 13, beta.d = 4e-05, beta.f = 40, mu = 0 * 1/50, w = 0,
  k = 1e-06, scenario = 2)
}
\arguments{
\item{PopSize}{try a range of values for this and see how it affects the outbreak - this corresponds to the "initial-population" slider in NetLogo}

\item{I0}{initial number of infected hosts, again try a number of different values - this corresponds to the "initial-infected" slider in NetLogo}

\item{R0}{initial number of recovered hosts - for now we assume there are no recovered (immune) hosts. We get to this in the course.}

\item{tmax}{maximum simulation time, units of years, (equivalent to Max-time slider in the NetLogo simulation)}

\item{gamma}{rate at which a person leaves the infectious compartment, which is the inverse of the average duration of the infections period. Note: 1/gamma is the duration of the infectious period in units of YEARS so e.g. gamma=26 means infectious period = 1/26 years = 14 days}

\item{beta.d}{rate of transmission of pathogen from infected to susceptible host (density)}

\item{beta.f}{rate of transmission of pathogen from infected to susceptible host (frequency)}

\item{mu}{death rate parameter - inverse, i.e. 1/mu, is the average lifespan (in years), a value of 0 means no deaths. A value of 1/20 means e.g. 20 years lifespan}

\item{w}{duration of immunity. Setting it to zero means infinite immunity (no waning immunity), 1/w is duration of immunity, so e.g. w=0.5 means 2 years of immunity}

\item{k}{constant of proportionality for population-size dependent area - choose such that results look decent}

\item{scenario}{set to different values for different stransmission scenarios: 1 = density-dependent, 2 = frequency-dependent}
}
\value{
This function returns the simulation result as obtained from a call
  to the deSolve ode solver
}
\description{
This model allows for the simulation of different transmission modes
}
\details{
A compartmental ID model with several states/compartments
  is simulated as a set of ordinary differential
  equations. The function returns the output from the odesolver as a matrix,
  with one column per compartment/variable. The first column is time.
}
\section{Warning}{

  This function does not perform any error checking. So if you try to do
  something nonsensical (e.g. have I0 > PopSize or any negative values or fractions > 1),
  the code will likely abort with an error message
}
\examples{
  # To run the simulation with default parameters just call this function
  result <- simulate_transmissionmodes()
  # To choose parameter values other than the standard one, specify them e.g. like such
  result <- simulate_transmissionmodes(PopSize = 2000,  tmax = 100, gamma = 10 )
  # You should then use the simulation result returned from the function, e.g. like this:
  plot(result[,1],result[,2],xlab='Time',ylab='Number Susceptible',type='l')
}
\author{
Andreas Handel
}
\references{
We can add (a) reference(s) here..
}
\seealso{
The UI of the shiny app 'TransmissionModes', which is part of this package, contains more details on the model
}

